<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        if (Schema::hasTable('order_item')) {
            $this->checkColumns();
        } else {
            Schema::create('order_item', function (Blueprint $table) {
                $table->id();
                $table->foreignId('item_id')->nullable()->index()->constrained('items')->cascadeOnDelete();
                $table->foreignId('order_id')->constrained('orders')->cascadeOnDelete();
                $table->integer('price')->default(0);
                $table->string('rent_value')->nullable();
                $table->integer('quantity')->default(1);
                $table->foreignId('rent_type_id')->nullable()->constrained('rent_types');
                $table->timestamps();
                $table->softDeletes();
            });
        }
    }
    private function checkColumns()
    {
        if (!Schema::hasColumn('order_item', 'item_id')) {
            Schema::table('order_item', function (Blueprint $table) {
                $table->foreignId('item_id')->nullable()->constrained('items')->cascadeOnDelete();
            });
        }
        if (!Schema::hasColumn('order_item', 'order_id')) {
            Schema::table('order_item', function (Blueprint $table) {
                $table->foreignId('order_id')->nullable()->constrained('orders')->cascadeOnDelete();
            });
        }
        if (!Schema::hasColumn('order_item', 'price')) {
            Schema::table('order_item', function (Blueprint $table) {
                $table->integer('price')->default(0);

            });
        }
        if (!Schema::hasColumn('order_item', 'rent_value')) {
            Schema::table('order_item', function (Blueprint $table) {
                $table->string('rent_value')->nullable();
            });
        }
        if (!Schema::hasColumn('order_item', 'quantity')) {
            Schema::table('order_item', function (Blueprint $table) {
                $table->integer('quantity')->default(1);

            });
        }
        if (!Schema::hasColumn('order_item', 'rent_type_id')) {
            Schema::table('order_item', function (Blueprint $table) {
                $table->foreignId('rent_type_id')->nullable()->constrained('rent_types');
            });
        }
        if (!Schema::hasColumn('order_item', 'deleted_at')) {
            Schema::table('order_item', function (Blueprint $table) {
                $table->softDeletes();
            });
        }
    }
    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('order_item');
    }
};
