<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        if (Schema::hasTable('cart_item')) {
            $this->checkColumns();
        } else {
            Schema::create('cart_item', function (Blueprint $table) {
                $table->id();
                $table->foreignId('item_id')->constrained('items');
                $table->foreignId('cart_id')->constrained('carts');
                $table->integer('quantity')->default(1);
                $table->foreignId('user_address_id')->nullable()->constrained('user_addresses')->nullOnDelete();
                $table->foreignId('receive_method_id')->nullable()->constrained('receive_methods')->nullOnDelete();
                $table->string('rent_value')->nullable();
                $table->foreignId('rent_type_id')->nullable()->constrained('rent_types');
                $table->text('fields')->nullable();
                $table->timestamps();
                $table->softDeletes();
            });
        }
    }

    private function checkColumns()
    {
        if (!Schema::hasColumn('cart_item', 'item_id')) {
            Schema::table('cart_item', function (Blueprint $table) {
                $table->foreignId('item_id')->nullable()->constrained('items');
            });
        }
        if (!Schema::hasColumn('cart_item', 'cart_id')) {
            Schema::table('cart_item', function (Blueprint $table) {
                $table->foreignId('cart_id')->constrained('carts');
            });
        }
        if (!Schema::hasColumn('cart_item', 'quantity')) {
            Schema::table('cart_item', function (Blueprint $table) {
                $table->integer('quantity')->default(1);
            });
        }
        if (!Schema::hasColumn('cart_item', 'user_address_id')) {
            Schema::table('cart_item', function (Blueprint $table) {
                $table->foreignId('user_address_id')->nullable()->constrained('user_addresses')->nullOnDelete();
            });
        }
        if (!Schema::hasColumn('cart_item', 'receive_method_id')) {
            Schema::table('cart_item', function (Blueprint $table) {
                $table->foreignId('receive_method_id')->nullable()->constrained('receive_methods')->nullOnDelete();
            });
        }
        if (!Schema::hasColumn('cart_item', 'fields')) {
            Schema::table('cart_item', function (Blueprint $table) {
                $table->text('fields')->nullable();
            });
        }
        if (!Schema::hasColumn('cart_item', 'rent_value')) {
            Schema::table('cart_item', function (Blueprint $table) {
               $table->string('rent_value')->nullable();

            });
        }
        if (!Schema::hasColumn('cart_item', 'rent_type_id')) {
            Schema::table('cart_item', function (Blueprint $table) {
               $table->foreignId('rent_type_id')->nullable()->constrained('rent_types');

            });
        }
        if (!Schema::hasColumn('cart_item', 'deleted_at')) {
            Schema::table('cart_item', function (Blueprint $table) {
                $table->softDeletes();
            });
        }
    }


    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('cart_item');
    }
};
